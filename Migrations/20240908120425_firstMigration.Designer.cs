// <auto-generated />
using System;
using ABP_ConferenceBookingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ABP_ConferenceBookingApp.Migrations
{
    [DbContext(typeof(ApplicationDB))]
    [Migration("20240908120425_firstMigration")]
    partial class firstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ABP_ConferenceBookingApp.Model.HallConference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.ToTable("HallConferences");
                });

            modelBuilder.Entity("ABP_ConferenceBookingApp.Model.PriceModifiers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<DateTime>("dateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PriceModifiers", t =>
                        {
                            t.HasCheckConstraint("ValidDate", "[dateStart] > '2024-09-07 00:00:00' AND [dateStart] < [dateEnd]");
                        });
                });

            modelBuilder.Entity("ABP_ConferenceBookingApp.Model.ServiceConference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("serviceConferences");
                });

            modelBuilder.Entity("HallConferenceServiceConference", b =>
                {
                    b.Property<int>("ConferencesId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceConferencesId")
                        .HasColumnType("int");

                    b.HasKey("ConferencesId", "ServiceConferencesId");

                    b.HasIndex("ServiceConferencesId");

                    b.ToTable("HallConferenceServiceConference");
                });

            modelBuilder.Entity("HallConferenceServiceConference", b =>
                {
                    b.HasOne("ABP_ConferenceBookingApp.Model.HallConference", null)
                        .WithMany()
                        .HasForeignKey("ConferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABP_ConferenceBookingApp.Model.ServiceConference", null)
                        .WithMany()
                        .HasForeignKey("ServiceConferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
